.TH NEMOVAR 1NEMO "18 March 2024"

.SH "NAME"
nemovar \- get and set NEMO variables

.SH "SYNOPSIS"
\fBnemovar\fP [parameter=value]

.SH "DESCRIPTION"
\fBnemovar\fP gets and sets NEMO variables, for the purpose of providing another method to
communicate (textual) information between tasks. These are persistent variables, and 
can cross different sessions, much like SHELL variables.
.PP
The current implementation uses a simple text file, but future implementation may also be able to
switch to shared memory, or whatever the operating system and environment provides, or what
the users' workflow prefers.

.SH "PARAMETERS"
.so man1/parameters
.TP 20
\fBvar=\fP
Name of the variable. Default: not used.
.TP
\fBvalue=\fP
If used, the variable is getting a new value. Default: not used.
.TP
\fB**delete=f|t\fP
Delete the named variable in \fBvar=\fP.
.TP
\fB**load=\fP
Load from a file. Need a replace/merge option?
.TP
\fB**save=\fP
Save to a file.

.SH "EXAMPLES"
The \fBNEMOVAR\fP environment variable is used to set the interprocess communication (currently only
files are supported).
For example on linux we might be able to use the shared memory as follows:
.EX

    export NEMOVAR=/dev/shm/nemovar.$USER
    nemovar a 10
    
.EE
to set the value of 10 to a. Then
.EX

    nemovar a
    
.EE
retrieves the value of a. And finally
.EX

    nemovar 
    
.EE
just shows all variables. Output is always to \fIstdout\fP. 

.SH "FORMAT"
Currently the format of the text file is a simple ASCII file, where all named variables are explictly shown as strings:
.EX

    a="10"
    b="hello world"
    c="3.141592"
    
.EE
to make it compatible with possible future \fIbash(1)\fP and \fIpython(1)\fP clients.
The data type interpretation is left to the client. This also opens the option for small lists, e.g.
.EX

    d="1,2,10:20:2"

.EE

.SH "FUTURE"
1. A future implementation will allow direct retrieval of NEMO variables is possible via the command line
(see \fIgetparam(3NEMO)\fP). For example, compare the two style, \fInemovar\fP on the left,
shell variables on the right:
.EX

     nemovar eps 0.05                 eps=0.05
     hackcode1 eps=%eps               hackcode1 eps=$eps
     
.EE
Note that some \fItable(5NEMO)\fP
programs use %0, %1, %2, .... to refer to column numbers, so variable names cannot start with
a digit. Upper and Lower case should be allowed.
.PP
Recall that the current command line interface already can refer to other keywords, e.g.
.EX

    foobar a=1 b='$a'
    
.EE
would assign the same value to both a and b.

2. An option should exist to remove a variable from the database.

3. In case there is true shared memory not associated with a filename, there needs to be a way to save and load
true files.

4. When \fIoutkeys/savevars\fP are implemented, the following style of IPC is possible:

.EX

     ccdstat ccd1 outkeys=mean,rms
     ccdplot ccd1 %mean
    
.EE
plotting a single contour of the mean value in the image.

.SH "SEE ALSO"
getparam(3NEMO), table(3NEMO)

.SH "FILES"
$NEMOVAR - currently the filename, but could be used to set a more generic IPC method.

.SH "AUTHOR"
Peter Teuben

.SH "HISTORY"
.nf
.ta +1.5i +5.5i
7-mar-2024	Created for NEMO2024	PJT
.fi

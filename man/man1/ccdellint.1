.TH CCDELLINT 1NEMO "6 December 2022"

.SH "NAME"
ccdellint \- integrate map or cube in elliptical (like) rings

.SH "SYNOPSIS"
\fBccdellint\fP [parameter=value]

.SH "DESCRIPTION"
\fBccdellint\fP integrates a Position-Position-Velocity (PPV) cube in elliptical annuli
in the first two dimensions, reducing it to a Radius-Velocity (RV) image.
.PP
This program also handles 2D images, in which case the output is a table, consisting
of 6 columns:
.nf

   rad = outer radius of the annulus;
   npix = number of pixels in the annulus;
   int = average in the annulus; (no support for median yet)
   rms = rms in the annulus;
   sum = sum in the annulus;
   cumsum = cumulative sum for all annuli so far.
   
.fi
This is the same order and meaning as the table from \fIellint(1MIRIAD)\fP.
.PP
The particle based program \fIsnapshell(1NEMO)\fP does something similar in 3D.
.PP
The metric of how the radius is computed can be changed using the \fBmetric=\fP keyword.
For metric=2 these would be called true rings, for metric=1 a square.

.SH "PARAMETERS"
.so man1/parameters
.TP 20
\fBin=\fP
input data cube. No default.   
.TP
\fBradii=\fP
radii of the ring boundaries (Nring+1). See \fBmetric=\fP below for
different ways to change the metric of computing a radius. No default.
.TP
\fBpa=\fP
position angle of disk, astronomical convention. [0]   
.TP
\fBinc=\fP
inclination angle of disk [0]   
.TP
\fBcenter=\fP
rotation center (mapcenter if left blank, 0,0=lower left)
.TP
\fBvsys=\fP
systemic velocity. Only needed for cube. [0]     
.TP
\fBblank=\fP
Value of the blank pixel to be ignored [0.0]
.TP
\fBnorm=\fP
Normalize values to number of pixels in ring. This only has an effect on the image
written, not on the table, which uses both.  [t]
.TP
\fBout=\fP
RV image, useful for 3D cubes. If not given, no image will be written. Default: not used
.TP
\fBtab=\fP
Output table, useful for 2D images. If not give, no table will be written. Default: not used
.TP
\fBrscale=\fP
Convenience factor by which radii are multiplied for display in the table. For FITS images
this is usually 3600.  [1]
.TP
\fBiscale=\fP
Convenience factor by which intensities are multiplied for display in the table. For FITS images
this is usually 1 / (1.133*(beam/pixel)**2).  [1]
.TP
\fBmetric=N\fP 
The exponent of the r^N = x^N + y^N metric to compute a radius. N=2 is the traditional cartesian [2]

.SH "DISKY vs BOXY"

The parameter \fBmetric=\fP described the type of ellipse to be integrated over. For metric<2 disky
isophotes are used, for metric>2 they are boxy. See also Athanassoula et al. 1990 MNRAS_245:130, although
they used c0=metric-2.

.SH "CAVEATS"
As with most of these codes, the center of pixel determines to which ring the pixel belongs in it total.
.PP
A value of \fBmetric=1\fP can be interesting, though the position angle may need to be adjusted, as the
box is mis-aligned by 45 degrees from the major axis.
For large values of \fBmetric\fP the box is aligned along the major axis.


.SH "EXAMPLES"
Example of generating a gaussian profile from a 2D gauss image
.nf

% ccdgen out=- object=gauss spar=1,50 size=256,256 | ccdellint - 0:100:5 tab=-
  5 80 0.997464 0.00145455 79.7971 79.7971
  10 236 0.987487 0.00426892 233.047 312.844
  ...
  95 2924 0.180558 0.0096899 527.951 13127.6
  100 3056 0.149281 0.00837475 456.204 13583.8

.fi
.PP
For a map in K.km/s that needs to be converted to Jy.km/s, with Jy/K=2.5 and a beam of 12.65 arcsec and
5.5 pixels there are 6 points per beam, therefore the rscale=3600 is needed to view the table in arcsec,
and iscale=2.5/6 for viewing in Jy.km/s:
.nf

  % fitsccd M100_97520_99703.mom0.fits  - |\\
       ccdellint - 0:250/3600:10/3600 pa=150 inc=40 center=45,45 rscale=3600 iscale=1.41/0.65/6.00 tab=-
  10 7 16.3524 0 114.467 114.467
  20 24 11.824 0 283.776 398.243
  ..
  240 290 0.0505762 0 14.6671 3057.86
  250 241 -0.0573514 0 -13.8217 3044.04
  
.fi

.PP
Some examples of PPV->RV
.nf
  % fitsccd ngc6503.cube.fits - |\\
      ccdellint - 0:1000/3600:10/3600 pa=-60 inc=40 center=163,122 out=ngc6503.rv.ccd norm=f

.fi
.SH "SEE ALSO"
ccdzshift(1NEMO), ellipse(1NEMO), snapshell(1NEMO), image(5NEMO)

.SH "FILES"
NEMO/src/image/misc/ccdellint.c

.SH "AUTHOR"
Peter Teuben

.SH "UPDATE HISTORY"
.nf
.ta +1.5i +5.5i
30-nov-2020	V0.1 drafted	PJT
23-nov-2022	V0.3 confirmed 2D images, added table output	PJT
6-dec-2022	V0.6 use metric= to allow other radius methods	PJT
.fi
